{"version":3,"sources":["components/layout/Header.js","components/ToDoItem.js","components/ToDos.js","components/AddToDo.js","components/pages/About.js","App.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","ToDoItem","getStyle","backgroundColor","borderBottom","props","todo","completed","this","id","title","type","onChange","toggleComplete","bind","onClick","deleteTodo","btnStyle","Component","border","borderRadius","cursor","float","ToDos","todos","map","key","React","AddToDo","state","inputHandler","e","setState","target","name","value","handleSubmit","preventDefault","addToDo","onSubmit","display","placeholder","flex","className","About","Fragment","App","axios","delete","then","response","filter","post","complete","data","get","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3f5012.chunk.js","sourcesContent":["import React from 'react';\n//Link is used in JSX instead of <a>\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>To Do List</h1>\n            <Link to=\"/\" style={linkStyle}>Home</Link> | <Link to=\"/about\" style={linkStyle}>About</Link>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n};\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ToDoItem extends Component {\n    getStyle = () => {\n        return {\n            backgroundColor: 'lightyellow',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    };\n//using arrow functions insted of traditional ones allows not to use function.bind(this)\n\n    render() {\n\n        //using destructuring we pull out id and title from this.props.todo to pass in return() JSX\n        const {id, title} = this.props.todo;\n\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                <input type=\"checkbox\" onChange={this.props.toggleComplete.bind(this, id)} />{' '}\n                {/* because of structuring we dnt have to write <p>{this.props.todo.title} */}\n                {title} \n                <button onClick={this.props.deleteTodo.bind(this, id)} style={btnStyle}>x</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n// PropTypes\nToDoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    toggleComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    padding: '5px 8px', \n    float: 'right'\n}\n\nexport default ToDoItem\n","import React from 'react';\nimport ToDoItem from './ToDoItem';\nimport PropTypes from 'prop-types';\n\nclass ToDos extends React.Component {\n\n    render(){\n        return(\n            this.props.todos.map((todo) =>\n                <ToDoItem key={todo.id} todo={todo} toggleComplete={this.props.toggleComplete} deleteTodo={this.props.deleteTodo}/>\n            )\n        )\n    }\n}\n// PropTypes\nToDos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    toggleComplete: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired\n}\nexport default ToDos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddToDo extends Component {\n    //this is component level state that is different to app level state that can be controlled via Redux \n    state = {\n        title: ''\n    }\n\n    //this is syntax to use with multiple input fields\n    inputHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        //pass addToDo method up the component tree passing title from state as parameter\n        this.props.addToDo(this.state.title);\n        //reset title field\n        this.setState({\n            title: ''\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} style={{display: 'flex'}}> \n                <input \n                    type=\"text\" \n                    //name attribute has to = to state property name for onchange input handler method to work\n                    name=\"title\" \n                    placeholder=\"Add task\" \n                    style={{flex:'10', padding: '5px'}}\n                    value = {this.state.title}\n                    onChange = {this.inputHandler}\n                />\n                <input \n                    type=\"submit\" \n                    value=\"Submit\" \n                    className=\"btn\" \n                    style={{flex: '1'}}\n                />  \n            </form>\n        )\n    }\n}\n\nexport default AddToDo\n\nAddToDo.propTypes = {\n    addToDo: PropTypes.func.isRequired,\n}","import React from 'react'\n\nfunction About() {\n    return (\n        //if div is not needed you can use React.Fragment\n        <React.Fragment>\n            <h1>About</h1>\n            <p>This is my first react app v.1.0.0.</p>\n        </React.Fragment>\n    )\n}\n\n\nexport default About;","import React from 'react';\n//to instal Router run: npm i react-router-dom\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport ToDos from './components/ToDos';\nimport AddToDo from './components/AddToDo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n//import { v4 as uuidv4 } from 'uuid'; - this module generates random id, to use - uuidv4() \n\nimport './App.css';\n\n\nclass App extends React.Component { \n  state = {\n    todos: []\n  }\n\n  //to do http request we have to use componentDidMount lifecycle function\n  //and for fetching data we use axios component installed with \"npm i axios\"\ncomponentDidMount() {\n  axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  .then(response => this.setState({\n    todos: response.data\n  }))\n}\n\n\n  //Toggle complete\n  toggleComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map((todo) => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    });\n  };\n\n  //Delete todo\n  deleteTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(response => this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    }))\n  };\n\n  //Add todo \n  addToDo = (title) => {\n    //post todo to the backend then update state from the backend (becasue it only mimics the server and not actually adding data to the server each id is 201, as there is only 200 todos in the json)\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title: title, //thgis can be written as just \"title\" with ES6\n      complete: false\n    })\n    .then(response => this.setState({\n        todos: [...this.state.todos, response.data]\n        }))\n  }\n\n  render() {\n    return (\n      //to use Router we have to wrap everything in it\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            {/* if there is more than one component we have to use render prop \n            Also adding exact to path will ensure that it will only be shown in that path*/}\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddToDo addToDo={this.addToDo}/>\n                <ToDos todos={this.state.todos} toggleComplete={this.toggleComplete} \n                deleteTodo={this.deleteTodo}/>\n              </React.Fragment>\n            )} /> \n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}